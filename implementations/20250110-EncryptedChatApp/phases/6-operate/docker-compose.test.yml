version: '3.8'

services:
  # Test Database
  postgres-test:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: e2echat_test
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5433:5432"
    volumes:
      - ./migrations:/docker-entrypoint-initdb.d:ro
    tmpfs:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d e2echat_test"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - test-network

  # Test Redis
  redis-test:
    image: redis:7-alpine
    command: redis-server --appendonly no
    ports:
      - "6380:6379"
    tmpfs:
      - /data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - test-network

  # Test Runner
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile
      target: deps
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://app:app@postgres-test:5432/e2echat_test
      REDIS_URL: redis://redis-test:6379
      JWT_SECRET: test-secret
      ENCRYPTION_KEY: test-encryption-key
      LOG_LEVEL: error
    volumes:
      - .:/app
      - /app/node_modules
    command: npm test
    networks:
      - test-network

networks:
  test-network:
    driver: bridge